syntax = "proto3";

service NodeService {
    rpc Infer (InferenceRequest) returns (InferenceResponse);
    rpc UpdateNextNode(UpdateNextNodeRequest) returns (UpdateNextNodeResponse);
    rpc GetInferenceMetrics(NodeInferenceMetricsRequest) returns (NodeInferenceMetricsResponse);
    rpc Ping(PingRequest) returns (PingResponse);
}

message InferenceRequest {
    int32 next_model_part_id = 1;
    int32 task_id = 2;
    bytes input_tensor = 3;
}

message InferenceResponse {
   int32 status_code = 1;
   string message = 2;
   int32 task_id = 3;
   int32 current_model_part_id = 4; 
}

message NodeInferenceMetricsRequest { }

message NodeInferenceMetricsResponse {
    int64 values_bytes = 1;
    int64 indices_bytes = 2;
    int64 ingress_bytes = 3;
    int64 egress_bytes = 4;
}

message UpdateNextNodeRequest {
    string next_node = 1;
}

message UpdateNextNodeResponse {
    int32 status_code = 1;
    string message = 2;
}

message PingRequest {}
message PingResponse {}