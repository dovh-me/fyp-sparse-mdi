syntax = "proto3";

service Server {
    rpc Hello(Test) returns (Test);
    rpc RegisterNode(RegisterRequest) returns (stream RegisterResponse);
    rpc InformReady(ReadyRequest) returns (ReadyRequest);
    rpc StartInference(StartInferenceRequest) returns (StartInferenceResponse);
    rpc EndInference(EndInferenceRequest) returns (EndInferenceResponse);
    rpc GetInferenceMetrics(InferenceMetricsRequest) returns (InferenceMetricsResponse);
    rpc Ping(ServerPingRequest) returns (ServerPingResponse);
}

message Test {}

message StartInferenceRequest {
    bytes input_tensor = 1; 
}

message StartInferenceResponse {
    int32 status_code = 1;
    string message = 2;
    bytes result = 3;
}

message EndInferenceRequest {
    int32 task_id = 1;
    bytes result = 2; 
}

message EndInferenceResponse {
    int32 status_code = 1;
    string message = 2;
}

message ReadyRequest {
    int32 port = 1;
    string node_id = 2;
}

message ReadyResponse {
    int32 status_code = 1;
    string message = 2;
}

message RegisterRequest {
    string ip = 1;
}

message RegisterResponse {
    int32 status_code = 1;
    string message = 2;
    string first_node = 4;
    string prev_node = 5;
    string model_part_id = 6;
    int32 port = 7;
    bytes chunk = 8; // Chunk of the model file
    string config = 9;
}

message InferenceMetricsRequest { }

message InferenceMetricsResponse {
    int32 ingress_bytes = 1;
    int32 egress_bytes = 2;
    int32 values_bytes = 3;
    int32 indices_bytes = 4;
}

message ServerPingRequest {}
message ServerPingResponse {}